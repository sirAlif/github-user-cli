version: '3.8'

volumes:
  postgres_data:
  es_data:

networks:
  backend:

services:
  db:
    image: postgres:13.16
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_HOST: ${DB_HOST}
      POSTGRES_PORT: ${DB_PORT}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/migrations:/migrations
    networks:
      - backend
    ports:
      - "${DB_PORT}:5432"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ports:
      - "${ELASTICSEARCH_PORT}:9200"
    networks:
      - backend

  kibana:
    image: docker.elastic.co/kibana/kibana:8.15.0
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "${KIBANA_PORT}:5601"
    networks:
      - backend
    depends_on:
      - elasticsearch

  logstash:
    image: docker.elastic.co/logstash/logstash:8.15.0
    container_name: logstash
    environment:
      - xpack.monitoring.enabled=false
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
    volumes:
      - ./conf/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./conf/logstash/users.sql:/usr/share/logstash/query/users.sql
      - ./conf/logstash/postgresql-42.7.3.jar:/usr/share/logstash/postgresql-42.7.3.jar
    networks:
      - backend
    depends_on:
      - elasticsearch
